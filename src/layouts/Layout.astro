---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import i18next, { t } from "i18next";
import { HeadHrefLangs } from "astro-i18next/components";
import ApplicationInitializer from "../components/ApplicationInitializer.astro";
import { Application } from '../Application.interface';

// Layout properties
export interface Props {
	title?: string;
	description: string;
	isHeaderEnabled?: boolean;
	isFooterEnabled?: boolean;
}

const {
	title = "default",
	description,
	isHeaderEnabled = true,
	isFooterEnabled = true
} = Astro.props;

// Application configuration
// Here we'll pass some application information (such as supported languages)
// to our body as an attribute. Script, defined in src/components/ApplicationInitializer.astro
// will get and pass all application-related attributes stored in body to window.application
// (type: src/Application.interface.ts)
const applicationConfiguration: Record<keyof Application, any> = {
	supportedLanguages: JSON.stringify(i18next.languages),
};
---

<!DOCTYPE html>
<html lang={ i18next.language }>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content={ t(`descriptions.${ description }`) } />
		<title>{ t(`title.${ title }`) }</title>
		<HeadHrefLangs />
	</head>
	<body {...applicationConfiguration}>
		<!-- Header -->
		{ isHeaderEnabled && <Header /> }

		<slot />

		<!-- Footer -->
		{ isFooterEnabled && <Footer /> }

		<!-- 
			Client-script, that'll add application (src/Application.interface.ts)
			properties to client's window property
		-->
		<ApplicationInitializer />
	</body>
</html>

<style>
	body {
		/* position: relative; */
		min-height: 100vh;
		display: flex;
		flex-direction: column;
		@apply bg-slate-50
	}
</style>